// Copyright Â© 2017-2019 Unit Circle Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Implementation of CBOS - http://www.stuartcheshire.org/papers/COBSforToN.pdf

import Foundation

enum COBSError: Error {
  case format
}

extension Data {
  func encodeCOBS() -> Data {
    var r = Data(count: self.count + (self.count / 254) + 1) // Encoded frame will be 1 larger for each 254 bytes
    var codeIdx = 0
    var write = 1
    r[codeIdx] = 1
    for x in self {
      if x == 0x00 {
        codeIdx = write
        write += 1
        r[codeIdx] = 1
      }
      else {
        r[codeIdx] += 1
        r[write] = x
        write += 1
        if r[codeIdx] == 0xff {
          codeIdx = write
          write += 1
          r[codeIdx] = 1
        }
      }
    }
    
    return r.subdata(in: 0..<write)
  }
  
  func decodeCOBS() -> Data? {
    var r = Data(count: self.count)  // Decoded frame will always be smaller
    var write = 0
    var code = UInt8(0)
    var zeroSeg = false
    for x in self {
      if code == 0 {
        if zeroSeg {
          r[write] = 0x00
          write += 1
        }
        guard x >= 1 else { return nil }
        zeroSeg = x < 255
        code = x - 1
      }
      else {
        r[write] = x
        write += 1
        code -= 1
      }
    }

    return r.subdata(in: 0..<write)
  }
}

#if false
func tc(_ x: String) {
  let r = x.decodeHex()
  let e = r.encodeCOBS()
  let d = try! e.decodeCOBS()
  print("\(r.encodeHex() == d.encodeHex() ? "_" : "F") <\(r.encodeHex())> <\(e.encodeHex())> <\(d.encodeHex())>")
}

func cobs_test() {
  tc("4500002C4C79000040064F37")
  tc("")
  tc("00")
  tc("31323300")
  tc("313233")
  tc("31")
  tc("31323300343536")
  tc("00000000000000000000")
  tc

 tc("303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839303132333435363738393031323334353637383930313233343536373839")
}
#endif
